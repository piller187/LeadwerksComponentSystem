{
	"name": "LcsSample",
	"messagegroups": 
	[
		{
			"name": "PowerMeters",
			"gameobjects": 
			[
				{
					"name": "Player"
				},
				{
					"name": "RedMeter"
				},
				{
					"name": "BlueMeter"
				}
			]
		}
	],
	"gameobjects": 
	[
		{
			"name": "Player",
			"poststart": "function(self) self.entity:SetShadowMode(0) self.entity:SetCollisionType(Collision.Character) self.entity:SetPickMode(0) local mat = Material:Load('Materials/Effects/Invisible.mat') self.entity:SetMaterial(mat) mat:Release() end",
			"persistent": "true",
			"folder": "",
			"savepos": "true",
			"saverot": "true",
			"savescale": "false",
			"savehidden": "false",
			"values": 
			[

			],
			"components": 
			[
				{
					"name": "Toolbox",
					"path": "Scripts/User/Components/Toolbox.lua"
				},
				{
					"name": "Cursor",
					"path": "Scripts/User/Components/Cursor.lua",
					"values": 
					[
						{
							"name": "cursorImage",
							"value": "Materials/User/ring512.tex",
							"type": "string"
						},
						{
							"name": "size",
							"value": "48",
							"type": "int"
						}
					]
				},
				{
					"name": "Input",
					"path": "Scripts/User/Components/Input.lua"
				},
				{
					"name": "Cam",
					"path": "Scripts/User/Components/Cam.lua",
					"values": 
					[
						{
							"name": "mouseSense",
							"value": "15",
							"type": "int"
						},
						{
							"name": "verticalCamLimit",
							"value": "-60,80",
							"type": "vec2"
						}
					]
				},
				{
					"name": "Controller",
					"path": "Scripts/User/Components/Controller.lua",
					"values": 
					[
						{
							"name": "moveSpeed",
							"value": "2",
							"type": "float"
						},
						{
							"name": "eyePos",
							"value": "1.6",
							"type": "float"
						}
					]
				},
				{
					"name": "Teams",
					"path": "Scripts/User/Components/Teams.lua",
					"values": 
					[
						{
							"name": "max",
							"value": "10",
							"type": "int",
							"store": "true"
						},
						{
							"name": "redPower",
							"value": "0",
							"type": "int",
							"store": "true"
						},
						{
							"name": "bluePower",
							"value": "0",
							"type": "int",
							"store": "true"
						}
					]
				}
			],
			"hookups": 
			[
				{
					"source": "Cam",
					"source_event": "Pick",
					"destination": "self",
					"destination_action": "SendMessage",
					"arguments": "function(args) args.Message='pick' end",
					"filter": "",
					"post": ""
				},
				{
					"source": "Teams",
					"source_event": "RedPowerChange",
					"destination": "PowerMeters",
					"destination_action": "SendMessage",
					"arguments": "function(args) args.Message='set.red.power' end",
					"filter": "",
					"post": ""
				},
				{
					"source": "Teams",
					"source_event": "BluePowerChange",
					"destination": "PowerMeters",
					"destination_action": "SendMessage",
					"arguments": "function(args) args.Message='set.blue.power' end",
					"filter": "",
					"post": ""
				},
				{
					"source": "self",
					"source_event": "ReceiveMessage",
					"destination": "Teams",
					"destination_action": "AddRedPower",
					"arguments": "",
					"filter": "function(args) if args.Message=='add.red.power' then return true else return false end end ",
					"post": ""
				},
				{
					"source": "self",
					"source_event": "ReceiveMessage",
					"destination": "Teams",
					"destination_action": "AddBluePower",
					"arguments": "",
					"filter": "function(args) if args.Message=='add.blue.power' then return true else return false end end ",
					"post": ""
				},
				{
					"source": "Input",
					"source_event": "Stop",
					"destination": "Controller",
					"destination_action": "Stop",
					"arguments": "",
					"filter": "",
					"post": ""
				},
				{
					"source": "Input",
					"source_event": "Forward",
					"destination": "Controller",
					"destination_action": "MoveForward",
					"arguments": "",
					"filter": "",
					"post": ""
				},
				{
					"source": "Input",
					"source_event": "Back",
					"destination": "Controller",
					"destination_action": "MoveBackwards",
					"arguments": "",
					"filter": "",
					"post": ""
				},
				{
					"source": "Input",
					"source_event": "Click",
					"destination": "Cam",
					"destination_action": "Pick",
					"arguments": "",
					"filter": "",
					"post": ""
				},
				{
					"source": "Controller",
					"source_event": "Move",
					"destination": "Cam",
					"destination_action": "Move",
					"arguments": "",
					"filter": "",
					"post": ""
				},
				{
					"source": "Cam",
					"source_event": "Turn",
					"destination": "Controller",
					"destination_action": "Turn",
					"arguments": "",
					"filter": "",
					"post": ""
				}
			]
		},
		{
			"name": "BluePower",
			"poststart": "",
			"persistent": "false",
			"folder": "",
			"savepos": "false",
			"saverot": "false",
			"savescale": "false",
			"savehidden": "false",
			"values": 
			[

			],
			"components": 
			[
				{
					"name": "BluePower",
					"path": "Scripts/User/Components/BluePower.lua",
					"values": 
					[
						{
							"name": "power",
							"value": "2",
							"type": "int"
						}
					]
				}
			],
			"hookups": 
			[
				{
					"source": "self",
					"source_event": "ReceiveMessage",
					"destination": "BluePower",
					"destination_action": "Picked",
					"arguments": "function(args) args.Message='add.blue.power' end",
					"filter": "",
					"post": ""
				}
			]
		},
		{
			"name": "RedPower",
			"poststart": "",
			"persistent": "false",
			"folder": "",
			"savepos": "false",
			"saverot": "false",
			"savescale": "false",
			"savehidden": "false",
			"values": 
			[

			],
			"components": 
			[
				{
					"name": "RedPower",
					"path": "Scripts/User/Components/RedPower.lua",
					"values": 
					[
						{
							"name": "power",
							"value": "2",
							"type": "int"
						}
					]
				}
			],
			"hookups": 
			[
				{
					"source": "self",
					"source_event": "ReceiveMessage",
					"destination": "RedPower",
					"destination_action": "Picked",
					"arguments": "function(args) args.Message='add.red.power' end",
					"filter": "",
					"post": ""
				}
			]
		},
		{
			"name": "RedMeter",
			"poststart": "",
			"persistent": "true",
			"folder": "",
			"savepos": "false",
			"saverot": "false",
			"savescale": "false",
			"savehidden": "false",
			"values": 
			[

			],
			"components": 
			[
				{
					"name": "RedMeter",
					"path": "Scripts/User/Components/RedMeter.lua",
					"values": 
					[
						{
							"name": "xpos",
							"value": "4",
							"type": "int"
						},
						{
							"name": "color",
							"value": "1,0,0,1",
							"type": "vec4"
						},
						{
							"name": "max",
							"value": "10",
							"type": "int"
						},
						{
							"name": "width",
							"value": "16",
							"type": "int"
						}
					]
				}
			],
			"hookups": 
			[
				{
					"source": "self",
					"source_event": "ReceiveMessage",
					"destination": "RedMeter",
					"destination_action": "Set",
					"arguments": "",
					"filter": "function(args) if args.Message == 'set.red.power' then return true else return false end end",
					"post": ""
				}
			]
		},
		{
			"name": "BlueMeter",
			"poststart": "",
			"persistent": "true",
			"folder": "",
			"savepos": "false",
			"saverot": "false",
			"savescale": "false",
			"savehidden": "false",
			"values": 
			[

			],
			"components": 
			[
				{
					"name": "BlueMeter",
					"path": "Scripts/User/Components/BlueMeter.lua",
					"values": 
					[
						{
							"name": "xpos",
							"value": "40",
							"type": "int"
						},
						{
							"name": "color",
							"value": "0,0,1,1",
							"type": "vec4"
						},
						{
							"name": "max",
							"value": "10",
							"type": "int"
						},
						{
							"name": "width",
							"value": "16",
							"type": "int"
						}
					]
				}
			],
			"hookups": 
			[
				{
					"source": "self",
					"source_event": "ReceiveMessage",
					"destination": "BlueMeter",
					"destination_action": "Set",
					"arguments": "",
					"filter": "function(args) if args.Message == 'set.blue.power' then return true else return false end end",
					"post": ""
				}
			]
		},
		{
			"name": "Hammer",
			"poststart": "",
			"persistent": "false",
			"folder": "",
			"savepos": "false",
			"saverot": "false",
			"savescale": "false",
			"savehidden": "false",
			"values": 
			[
				{
					"name": "type",
					"value": "stone",
					"type": "string"
				}
			],
			"components": 
			[
				{
					"name": "Hammer",
					"path": "Scripts/User/Components/Hammer.lua"
				}
			],
			"hookups": 
			[
				{
					"source": "Hammer",
					"source_event": "Picked",
					"destination": "",
					"destination_action": "SendMessage",
					"arguments": "function(args) return {Message=\"add.tool.hammer\",Dest=args.Source, Source=args.Dest} end",
					"filter": "",
					"post": ""
				}
			]
		}
	]
}